{
  "private": true,
  "devDependencies": {
    "@sinonjs/fake-timers": "^6",
    "@types/encoding-down": "^5",
    "@types/memdown": "^3",
    "@types/mocha": "^8",
    "@types/sinonjs__fake-timers": "^6",
    "@typescript-eslint/eslint-plugin": "^4",
    "@typescript-eslint/parser": "^4",
    "encoding-down": "^6",
    "eslint": "^7",
    "eslint-config-standard": "^14",
    "eslint-config-standard-with-typescript": "^19",
    "eslint-plugin-import": "^2.22",
    "eslint-plugin-node": "^11",
    "eslint-plugin-promise": "^4",
    "eslint-plugin-standard": "^5",
    "memdown": "^5",
    "mocha": "^8",
    "typescript": "^4"
  },
  "scripts": {
    "build": "tsc",
    "test": "mocha services/*.test.js",
    "lint": "eslint ."
  },
  "workspaces": ["services"],
  "eslintConfig": {
    "extends": ["eslint:recommended", "standard"],
    "parserOptions": {
      "sourceType": "script"
    },
    "rules": {
      "no-var": "error",
      "space-before-function-paren": ["error", {
        "anonymous": "always",
        "named": "never",
        "asyncArrow": "always"
      }],
      "strict": "error"
    },
    "overrides": [
      {
        "files": "*.ts",
        "extends": [
          "plugin:@typescript-eslint/recommended",
          "plugin:@typescript-eslint/recommended-requiring-type-checking",
          "standard-with-typescript"
        ],
        "parserOptions": {
          "project": "tsconfig.json",
          "tsconfigRootDir": "."
        },
        "rules": {
          "@typescript-eslint/naming-convention": "off",
          "@typescript-eslint/no-explicit-any": "off",
          "@typescript-eslint/no-non-null-assertion": "off",
          "@typescript-eslint/promise-function-async": "off",
          "@typescript-eslint/space-before-function-paren": ["error", {
            "anonymous": "always",
            "named": "never",
            "asyncArrow": "always"
          }],
          "@typescript-eslint/strict-boolean-expressions": ["error", {}],
          "no-void": ["error", { "allowAsStatement": true }]
        }
      }, {
        "files": "*",
        "rules": {
          "generator-star-spacing": ["error", "after"],
          "no-labels": "off",
          "no-promise-executor-return": "error",
          "yoda": ["error", "never", { "onlyEquality": true }]
        }
      }
    ]
  },
  "eslintIgnore": ["services/*.js"]
}
